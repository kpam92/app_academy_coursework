exit
two.parent = oneexit
three.parent = one
four.parent = three
four = PolyTreeNode.new("FOUR")
three = PolyTreeNode.new("THREE")
two = PolyTreeNode.new("TWO")
one = PolyTreeNode.new("ONE")
load 'polytreenode.rb'
child.dfs2("TWO")
four.dfs2("TWO")
child
display self.value
sidplay self.value
display target_value
display current_child
exit
current_child.nil?
current_child.value
s
child
s
n
s
child.value
s
n
s
display self.value
display target_value
exit
n
child.value
s
display self.value
display target_value
n
s
n
m
n
self.children.empty?
n
target_value == @value
s
undisplay 3
display parent.value
display self.children.map(&:value)
self.children.map(&:value)
display self.children
display self.value
d self.value
display target_value
exit
three.parent = one
four.parent = three
four = PolyTreeNode.new("FOUR")
three = PolyTreeNode.new("THREE")
two = PolyTreeNode.new("TWO")
one = PolyTreeNode.new("ONE")
